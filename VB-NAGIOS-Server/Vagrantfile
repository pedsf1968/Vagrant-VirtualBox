################################################################################
# FILE NAME   : Vagrantfile
# FILE TYPE   : Vagrantfile
# VERSION     : 210722
# ARGS        
# --help, -h                    : Show Vagrantfile options
# --verbose, -v                 : Verbose installation
# --managementIP=MANAGMENT_IP   : Specify the managment IP
# --ntpIP=NTP_IP                : Specify the NTP server IP
# --timezone=TIME_ZONE          : Specify the time zone
# --name=VM_NAME                : Specify a name for the VM
# --hostname=VM_HOSTNAME        : Specify a hostname for the VM
# --ip=VM_IP                    : Specify an IP for the VM
# --cpus=VM_CPUS                : Specify the VM core number
# --memory=VM_MEMORY            : Specify the VM memory amount in ko
# --archive=ARCHIVE_URL         : Specify the Nagios URL link archive
# --plugins=PLUGINS_ARCHIVE_URL : Specify the Nagios plugins URL link archive
# --directory=NAGIOS_DIRECTORY  : Specify the directory where to install Nagios configuration
# --askPwd                      : Ask for Nagios admin password
# --adminPwd=ADMIN_PWD          : Specify Nagios admin password
#
# AUTHOR      : PEDSF
# EMAIL       : pedsf.fullstack@gmail.com
#
# DESCRIPTION : NAGIOS server installation
################################################################################
require 'getoptlong'

###################################################################### CONSTANTS
MANAGMENT_IP = ".*"
NTP_IP = "10.1.33.11"
NETWORK_TIMEZONE = "Europe/Paris"
VM_NAME = 'Vagrant-Nagios-server'
VM_HOSTNAME = "NAGIOS-server"
VM_IP = "10.1.33.13"
VM_CPUS = "1"
VM_MEMORY = "1024"
VM_GUI = false
NAGIOS_ARCHIVE_URL="https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.6.tar.gz"
NAGIOS_PLUGINS_ARCHIVE_URL="https://nagios-plugins.org/download/nagios-plugins-2.3.3.tar.gz"
NAGIOS_DIRECTORY="/usr/local/nagios/my_conf"
NAGIOS_ADMIN_PWD="nagios"

###################################################################### VARIABLES
verbose = nil
managmentIP = "#{MANAGMENT_IP}"
ntpIP = "#{NTP_IP}"
networkTimezone = "#{NETWORK_TIMEZONE}"
vmName = "#{VM_NAME}"
vmHostname = "#{VM_HOSTNAME}"
vmIP = "#{VM_IP}"
vmCpus = "#{VM_CPUS}"
vmMemory = "#{VM_MEMORY}"
nagiosArchiveUrl = "#{NAGIOS_ARCHIVE_URL}"
nagiosPluginsArchiveUrl = "#{NAGIOS_PLUGINS_ARCHIVE_URL}"
nagiosDirectory = "#{NAGIOS_DIRECTORY}"
askPassword = nil
nagiosAdminPassword = "#{NAGIOS_ADMIN_PWD}"

#################################################################### LAUNCH ARGS
opts = GetoptLong.new(
  [ '--help', '-h', GetoptLong::NO_ARGUMENT ],
  [ '--verbose', '-v', GetoptLong::NO_ARGUMENT ],
  [ '--managementIP', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--ntpIP', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--timezone', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--name', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--hostname', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--ip', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--cpus', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--memory', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--archive', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--plugins', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--directory', GetoptLong::REQUIRED_ARGUMENT ],
  [ '--askPwd', GetoptLong::NO_ARGUMENT ],
  [ '--adminPwd', GetoptLong::REQUIRED_ARGUMENT ]
)

opts.each do |opt, arg|
  case opt
    when '--help'
      puts <<-EOF
Vagrant [OPTION] ...
--help, -h:
    Show this help
--verbose, -v:
    Verbose installation
--managemntIP=MANAGMENT_IP:
    Set the managment IP, if IP is not supplied default is #{MANAGMENT_IP}
--ntpIP=NTP_IP:
    Set the NTP server IP, if IP is not supplied default is #{NTP_IP}
--timezone=TIME_ZONE:
    Set time zone of the network, if time zone is not supplied default is #{NETWORK_TIMEZONE}
--name=VM_NAME:
    Set VM name, if name is not supplied default is #{VM_NAME}
--hostname=VM_HOSTNAME:
    Set VM hostname, if hostname is not supplied default is #{VM_HOSTNAME}
--ip=VM_IP:
    Set VM IP, if IP is not supplied default is #{VM_IP}
--cpus=VM_CPUS:
    Set VM core number, if the number of cores is not supplied default is #{VM_CPUS}
--ip=VM_MEMORY:
    Set VM memory amount, if the memory in ko is not supplied default is #{VM_MEMORY}
--archive=NAGIOS_ARCHIVE_URL:
    Specify Nagios URL archive, if URL is not supplied default is #{NAGIOS_ARCHIVE_URL}
--plugins=NAGIOS_PLUGINS_ARCHIVE_URL:
    Specify Nagios plugins URL archive, if URL is not supplied default is #{NAGIOS_PLUGINS_ARCHIVE_URL}
--directory=NAGIOS_DIRECTORY:
    Specify Nagios configuration directory in VM, if directory is not supplied default is #{NAGIOS_DIRECTORY}
--askPwd:
    Ask login and password for Nagios admin and admin
--managerPwd=ADMIN_PWD:
    Set Nagios admin password, if IP is not supplied default is #{NAGIOS_ADMIN_PWD}
    EOF
    exit 0
    when '--verbose'
      verbose = opt
    when '--managmentIP'
      managmentIP = arg
    when '--ntpIP'
      ntpIP = arg
    when '--timezone'
      networkTimezone = arg
    when '--name'
      vmName = arg
    when '--hostname'
      vmHostname = arg
    when '--ip'
      vmIP = arg
    when '--cpus'
      vmCpus = arg
    when '--memory'
      vmMemory = arg
    when '--archive'
      nagiosArchiveUrl = arg
    when '--plugins'
      nagiosPluginsArchiveUrl = arg
    when '--directory'
      nagiosDirectory = arg
    when '--askPwd'
      askPassword = 'True'
    when '--adminPwd'
      nagiosAdminPassword = arg
  end
end

case ARGV[0]
when "provision", "up"
  
  def ask_password(message, default_value)
    print message
    system 'stty -echo'
    pass = URI.escape(STDIN.gets.chomp)
    if pass == '' 
      pass = default_value
    end
    ensure
    system 'stty echo'
    return pass  
  end

  # Ask for Tomcat manager and admin pw
  if askPassword != nil
    nagiosAdminPassword = ask_password("Enter Nagios admin password :",NAGIOS_ADMIN_PWD)
  end

  if verbose != nil 
    print "\nManagment IP : #{managmentIP}\n"
    print "NTP server IP : #{ntpIP}\n"
    print "Network time zone : #{networkTimezone}\n"
    print "Name : #{vmName}\n"
    print "Hostname : #{vmHostname}\n"
    print "IP : #{vmIP}\n"
    print "Cores : #{vmCpus}\n"
    print "Memory : #{vmMemory}\n"
    print "Nagios archive : #{nagiosArchiveUrl}\n"
    print "Nagios plugins archive : #{nagiosPluginsArchiveUrl}\n"
    print "Nagios directory : #{nagiosDirectory}\n"  
    print "Nagios admin password : #{nagiosAdminPassword}\n"  
  end  
end 

########################################################################## BUILD
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/focal64"
  config.vm.box_url = "ubuntu/focal64"
  config.vm.box_check_update = true  
  config.vm.hostname = vmHostname
  config.vm.network "private_network", ip: vmIP

  config.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    vb.customize ["modifyvm", :id, "--name", vmName]
    vb.cpus = vmCpus
    vb.memory = vmMemory
    vb.gui = VM_GUI
  end
  
  config.vm.provision "file", source: "nagios_conf", destination: "/tmp"

  # launch Nagios install
  nagiosParameters = "#{verbose}"
  nagiosParameters += " --managmentIP #{managmentIP}"
  nagiosParameters += " --ntpIP #{ntpIP}"
  nagiosParameters += " --timezone #{networkTimezone}"
  nagiosParameters += " --hostname #{vmHostname}"
  nagiosParameters += " --ip #{vmIP}"
  nagiosParameters += " --archive #{nagiosArchiveUrl}"
  nagiosParameters += " --plugins #{nagiosPluginsArchiveUrl}"
  nagiosParameters += " --directory #{nagiosDirectory}"
  nagiosParameters += " --adminPwd #{nagiosAdminPassword}"
  
  config.vm.provision :shell, :path => "nagios-install.sh", :args => nagiosParameters 
end